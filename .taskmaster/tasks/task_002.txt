# Task ID: 2
# Title: Design Database Schema for User Management
# Status: done
# Dependencies: 1
# Priority: high
# Description: Create database migrations and models for user accounts and sleep session data storage
# Details:
Generate User model with fields: email (string, unique, indexed), password_digest (string), created_at, updated_at. Generate SleepSession model with fields: user_id (foreign key), start_time (datetime), end_time (datetime), dismissal_count (integer), total_dismissal_duration (integer), created_at, updated_at. Add database indexes for performance: user_id on sleep_sessions, email on users. Use `rails generate model User email:string:uniq password_digest:string` and `rails generate model SleepSession user:references start_time:datetime end_time:datetime dismissal_count:integer total_dismissal_duration:integer`. Add validations in models: email presence/uniqueness/format, password length, sleep session associations.

# Test Strategy:
Run migrations successfully, verify database schema with `rails db:schema:dump`, test model validations in Rails console, ensure foreign key constraints work properly.

# Subtasks:
## 1. Design the User Model [done]
### Dependencies: None
### Description: Define the User model with appropriate attributes (e.g., email, name, password_digest) and ensure it follows Rails conventions for authentication and associations.
### Details:
Determine required fields, data types, and add necessary indexes (e.g., unique index on email). Consider validations for presence and uniqueness.

## 2. Design the SleepSession Model [done]
### Dependencies: 2.1
### Description: Create the SleepSession model with relevant attributes (e.g., user_id, start_time, end_time, quality_rating) and establish associations to the User model.
### Details:
Define foreign key relationship to User, choose appropriate data types, and consider additional fields for tracking sleep metrics.

## 3. Add Indexes and Constraints [done]
### Dependencies: 2.1, 2.2
### Description: Implement database-level indexes and constraints to ensure data integrity and optimize query performance.
### Details:
Add unique and foreign key constraints, NOT NULL constraints, and indexes on frequently queried columns (e.g., user_id on SleepSession, email on User).

## 4. Implement Model Validations [done]
### Dependencies: 2.1, 2.2
### Description: Add ActiveRecord validations to the User and SleepSession models to enforce business rules and prevent invalid data from being saved.
### Details:
Include presence, uniqueness, and format validations as appropriate for each model's attributes.

## 5. Test Migrations and Associations [done]
### Dependencies: 2.1, 2.2, 2.3, 2.4
### Description: Write and execute tests to verify that migrations run successfully, models are associated correctly, and validations work as intended.
### Details:
Create test cases for model associations, validation errors, and ensure database schema matches expectations after migrations.

